void LinkedList::InsertNode(int v)
{
	Node *cur;
	cur = new Node;

	cout << v << " is inserted.";

	Node *NewN;
	NewN = new Node;
	NewN->value = v;

	//head가 null이 아닐 때
	if (head !=0)
	{	
		//cout << "///head가 null이 아닐 때///" << endl;
		cout << endl;
		cur = head;
		
		if (head->next == 0)
		{
			//cout << "head->next==0일 때" << endl;

			if (NewN->value < cur->value)
			{	
				//cout << "NewN->value: " << NewN->value << " cur->value: " << cur->value << endl;
				NewN->next = cur;
				head = NewN;
				cur = head;

				//cout << "cur->value: " << cur->value << " cur의 주소: " << cur << " cur->next의 주소: " << cur->next << " cur->next->value: " << cur->next->value << endl;
			}

			else
			{

				cur->next = NewN;
				NewN->next = 0;
				cur = head;
				//cout << "cur->value: " << cur->value << " cur->next->value:" << cur->next->value << endl;


			}

			
		}

		else // head->next !=0
		{
			if ((NewN->value < cur->next->value)&&(NewN->value>cur->value))
			{
				NewN->next = cur->next;
				cur->next = NewN;
				cur = NewN;
				//cout << "cur->value: " << cur->value << " cur->next->value: " << cur->next->value <<
					//"cur->next->next->value: " << cur->next->next->value << endl;
			}

			else if ((cur=head)&&(NewN->value<cur->value))
			{
				NewN->next = cur;
				head = NewN;
				cur=head;
				
			}

			else if(NewN->value>cur->next->value)
			{
				cur = cur->next;
			}


		}
	}

	else // head==NULL
	{
		//cout << "///head가 null일 때///" << endl;
		//cout << endl;
		//cout << " NewN->value: " << NewN->value << endl;

		head = NewN;
		cur = head;
		cur->next = 0;

		//cout << "cur->value: " << cur->value << " head->value: " << head->value << endl;
		//cout << endl;

	}
	PrintNode();

}
